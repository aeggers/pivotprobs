% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/event_list_functions.R
\name{election_list_functions}
\alias{election_list_functions}
\alias{plurality_election}
\alias{positional_election}
\alias{irv_election}
\alias{kemeny_young_election}
\title{Create election list for analysis}
\usage{
plurality_election(n = 1000, k = 4, max_pivot_event_degree = 2)

positional_election(n = 1000, s = 0.5)

irv_election(n = 1000, s = 0)

kemeny_young_election(n = 1000)
}
\arguments{
\item{n}{The size of the electorate. This (slightly) affects the
conditions for election events in the election list
(e.g. the region in which one
candidate is more than one vote ahead of another).
\code{n} is also used when computing pivot event probabilities
from an election list in \code{election_event_probs()},
where higher \code{n} means lower probability.}

\item{k}{The number of candidates in plurality.}

\item{max_pivot_event_degree}{If 1, we consider two-way (near) ties
in plurality. If 2, we also consider three-way (near) ties.}

\item{s}{The value of a second-ranking in a three-candidate
positional election, where a top ranking is worth 1 and a bottom ranking is worth 0.}
}
\description{
An election list represents an election
in a minimal way: it contains the electorate size, the ballot
format, and a list of "election events", i.e. situations in which
a single ballot can affect the outcome in a given way.
It also contains a label for the voting system, e.g. "positional".
An election list is passed to the
\code{election_event_probs()}
function to compute the probability of each election event given
a model of voting outcomes.
}
\details{
An election list contains the electorate size \code{n},
an \code{ordinal}
flag indicating whether this is an ordinal or single-ballot
voting
system, and a list of election \code{events}. For each event,
the election list indicates \itemize{\item conditions under which the event takes place, and \item which candidate wins given that this
event takes place as a function of which additional ballot is submitted.}

These functions produce plain lists, so functions can be written
for further election methods.

The election methods provided are:
\itemize{
\item \code{plurality_election()}, where each voter votes for
one of \code{k>=3} candidates and the candidate with the most votes wins.
\item \code{positional_election()}, where each voter ranks the
three candidates and the candidate with the highest score wins, with
each top ranking worth 1 point, each bottom ranking worth 0 points,
and each middle ranking worth \code{s} points.
For now we can only handle 3 candidates.
(I have written code to handle more, but the QHull
functions seem to have trouble with the geometry.)
\item \code{irv_election()} (instant-runoff), where each voter
ranks the three candidates and the winner is determined by a process
of elimination. The ballots are initially tallied using a
positional method; the most commonly used option is plurality,
i.e. \code{s=0}.) The lowest-scoring candidate is eliminated.
Given three candidates, the winner is then determined according
to which of the remaining candidates is ranked higher on more
ballots.
\item \code{kemeny_young_election()} (maximin), where any
candidate who defeats all others in a pairwise comparison (i.e. is ranked higher on more ballots)
is the winner and, if there is no such candidate, the winner is the
candidate who is defeated by the smallest margin.
}
}
\examples{
plurality_election(k = 3)
positional_election(s = .5) # borda count
irv_election()
kemeny_young_election()

}
